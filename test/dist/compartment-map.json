{
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/entry.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/entry.js",
    "dependencies": [
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/lib/index.js"
    ],
    "type": "javascript/auto",
    "source": "import { cowsay } from \"cowsayjs\";\n\nconsole.log(cowsay(`haay wuurl`));\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/lib/index.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/lib/index.js",
    "dependencies": [
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/lib/box.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/lib/mode.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/index.js"
    ],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\nvar box = require(\"./box\");\nvar mode = require(\"./mode\");\nvar cows = require(\"../cows\");\n\n\n/**\n * Common options for cowsay and cowthink functions\n *\n * @typedef {Object} CowOptions\n * @property {string | import(\"../cows\").CowBase} [cow] Cow name\n * @property {string} [mode] Cow face mode\n * @property {string} [eyes] Custom cow eyes\n * @property {string} [tongue] Custom cow tongue\n * @property {string | number | boolean | null} [wrap] Where the message should be wrapped\n */\n\n/**\n * Action option\n *\n * @typedef {Object} CowActionOption\n * @property {import(\"./box\").BoxAction} [action] Cow action\n * @package\n */\n\n/**\n * Message option\n *\n * @typedef {Object} CowMessageOption\n * @property {string} [message] Cow message\n * @package\n */\n\n/**\n * Options for the moo function\n *\n * The common options for cowsay and cowthink with the action property.\n *\n * @typedef {CowOptions & CowActionOption} CowMooOptions\n */\n\n/**\n * Options for the moo function with message\n *\n * The full options for moo with the message property.\n *\n * @typedef {CowMooOptions & CowMessageOption} CowAllOptions\n */\n\n\n/**\n * Add the given property to the cow options\n *\n * @param {{ [key: string]: any } | undefined} options Cow options\n * @param {keyof CowAllOptions} property Cow action\n * @param {CowAllOptions[property]} value Cow action\n * @returns {CowAllOptions} All cow options\n * @package\n */\nfunction extendOptions(options, property, value) {\n  var extended = typeof options === \"object\" && options !== null ? {\n    message: options.message,\n    cow: options.cow,\n    mode: options.mode,\n    eyes: options.eyes,\n    tongue: options.tongue,\n    wrap: options.wrap,\n    action: options.action,\n  } : {};\n\n  // Return extended options\n  extended[property] = value;\n  return extended;\n}\n\n\n/**\n * Build an ASCII cow with the message\n *\n * Default values:\n *  - action: \"say\"\n *  - eyes: \"oo\"\n *  - wrap: 40\n *\n * @param {CowAllOptions | string} [message] Message to show\n * @param {CowMooOptions} [options] Cow options with action\n * @returns {string} ASCII cow with the message\n */\nfunction moo(message, options) {\n  // Adjust parameters\n  var opts = typeof message === \"object\" && message !== null ?\n    message : extendOptions(options, \"message\", message);\n\n\n  // Get action\n  /** @type {import(\"./box\").BoxAction} */\n  var action = opts.action === \"think\" ? \"think\" : \"say\";\n  /** @type {import(\"../cows\").CowAction} */\n  var act = action === \"think\" ? \"o\" : \"\\\\\";\n\n  // Get face\n  var eyes;\n  var tongue;\n\n  // Find face by mode\n  if (typeof opts.mode === \"string\") {\n    var face = mode.modeFace(opts.mode);\n    eyes = face.eyes;\n    tongue = face.tongue;\n  }\n\n  // Custom face\n  if (typeof opts.eyes === \"string\" && eyes === undefined) {\n    eyes = opts.eyes;\n  }\n  if (typeof opts.tongue === \"string\" && tongue === undefined) {\n    tongue = opts.tongue;\n  }\n\n  // Get cow and returns\n  /** @type {import(\"../cows\").CowBase} */\n  var cow;\n\n  switch (typeof opts.cow) {\n    case \"string\": cow = cows.getCow(opts.cow); break;\n    case \"object\": cow = cows.validateCow(opts.cow) ? opts.cow : cows.corral[0]; break;\n    default:       cow = cows.corral[0];\n  }\n\n  return box.perform(action, opts.message, opts.wrap) + cows.renderCow(cow, act, eyes, tongue);\n}\n\n\n/**\n * Build an ASCII cow saying the message\n *\n * Default values:\n *  - eyes: \"oo\"\n *  - wrap: 40\n *  - action: \"say\"\n *\n * @param {string} [message] Message to say\n * @param {CowOptions} [options] Cow options\n * @returns ASCII cow saying the message\n */\nfunction cowsay(message, options) {\n  return typeof message === \"object\" && message !== null ?\n    moo(extendOptions(message, \"action\", \"say\")) :\n    moo(message, extendOptions(options, \"action\", \"say\"));\n}\n\n/**\n * Build an ASCII cow thinking the message\n *\n * Default values:\n *  - eyes: \"oo\"\n *  - wrap: 40\n *  - action: \"think\"\n *\n * @param {CowAllOptions | string} [message] Message to think\n * @param {CowOptions} [options] Cow options\n * @returns ASCII cow thinking the message\n */\nfunction cowthink(message, options) {\n  return typeof message === \"object\" && message !== null ?\n    moo(extendOptions(message, \"action\", \"think\")) :\n    moo(message, extendOptions(options, \"action\", \"think\"));\n}\n\n\n/**\n * A nodejs clone of the classic cowsay and cowthink cli commands\n *\n * @module cowsayjs\n */\nmodule.exports = {\n  moo: moo,\n  cowsay: cowsay,\n  cowthink: cowthink\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/lib/box.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/lib/box.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n\n/**\n * The cow action\n *\n * @typedef {\"say\" | \"think\"} BoxAction\n */\n\n/**\n * Limits of the box message for the actions\n *\n * @typedef {Object} CowBoxLimits\n * @property {string[]} say Box message limits for the say action\n * @property {string[]} think Box message limits for the think action\n * @package\n */\n\n\n/**\n * Box limits for the actions\n *\n * @type {CowBoxLimits}\n */\nvar limits = {\n  say: [\n    \"< \", \" >\",\n    \"/ \", \" \\\\\",\n    \"\\\\ \", \" /\",\n    \"| \", \" |\"\n  ],\n  think: [\n    \"( \", \" )\",\n    \"( \", \" )\",\n    \"( \", \" )\",\n    \"( \", \" )\"\n  ]\n};\n\n\n/**\n * Split the message in multiple lines\n *\n * @param {string} message Message to split\n * @param {number} [wrap] Word wrap column\n * @returns {string[]} Message lines\n */\nfunction split(message, wrap) {\n  // No wrap text\n  if (typeof wrap !== \"number\" || isNaN(wrap)) {\n    // Break lines and replace tabs by spaces\n    return message\n      .split(/\\r\\n|[\\n\\r\\f\\v\\u2028\\u2029\\u0085]/g)\n      .map(function(line) {\n        // Find tabs\n        var tab = line.indexOf(\"\\t\");\n\n        if (tab === -1) {\n          return line;\n        }\n\n        // Replace tabs\n        var tabbed = line;\n\n        do {\n          var spaces = Array(9 - tab % 8).join(\" \");\n          tabbed = tabbed.slice(0, tab) + spaces + tabbed.slice(tab + 1);\n          tab = tabbed.indexOf(\"\\t\", tab + spaces.length);\n        } while (tab !== -1);\n\n        return tabbed;\n      });\n  }\n\n\n  // Fix tabs, breaklines and split lines\n  var lines = message\n    .replace(/(?:\\r\\n|[\\n\\r\\f\\v\\u2028\\u2029\\u0085])(\\S)/g, \" $1\")\n    .replace(/(?:\\r\\n|[\\n\\r\\f\\v\\u2028\\u2029\\u0085])\\s+/g, \"\\n\\n\")\n    .replace(/(?:\\r\\n|[\\t\\n\\r\\f\\v\\u2028\\u2029\\u0085])$/g, \" \")\n    .split(/\\r\\n|[\\n\\r\\f\\v\\u2028\\u2029\\u0085]/g);\n\n  // Process lines\n  lines = lines.map(function(line, i) {\n    // Empty line\n    if (/^\\s*$/.test(line)) {\n      return \"\";\n    }\n\n    // Remove duplicated spaces and trim left for non first line\n    var fixed = line.replace(/\\s+/g, \" \");\n    return i > 0 ? fixed.replace(/^\\s+/, \"\") : fixed;\n  }).filter(function(line, i, lines) {\n    // Allways allow not empty lines and the first line\n    if (line.length > 0 || i <= 1) {\n      return true;\n    }\n\n    // Remove duplicated empty lines\n    return lines[i - 1].length > 0;\n  });\n\n\n  // Check empty message\n  if (lines.every(function(line) { return line.length === 0; })) {\n    return [ \"\" ];\n  }\n\n\n  // Trim last empty line\n  if (lines[lines.length - 1].length === 0) {\n    lines.pop();\n  }\n\n\n  /** @type{string[]} */\n  var initial = [];\n  var max = wrap;\n  var col = wrap - 1;\n\n  // Wrap words\n  return lines.reduce(function(acc, line, i, src) {\n    // Empty line\n    if (line.length === 0) {\n      return acc.concat(line);\n    }\n\n    // Too small word wrap column or invalid value\n    if (max < 2) {\n      // Ends if the next line is not empty\n      if (src[i + 1] !== \"\") {\n        src.splice(0);\n      }\n\n      // Add a \"0\" character and continue like wraping at second column\n      max = 2;\n      col = 1;\n      return acc.concat(\"0\");\n    }\n\n\n    // Get break position\n    var last = i > 0 ? acc[acc.length - 1] + line : line;\n    var space = last.length < max ? last.length : last.lastIndexOf(\" \", col);\n    var br = space > 0 && space < col ? space : last.length === max && last[last.length - 1] === \" \" ? max : col;\n\n    // Wrap line\n    var words = acc.concat(last.slice(0, br));\n    var rest = line.slice(br).replace(/^\\s+/, \"\");\n\n    // Wrap rest of line\n    while (rest.length > 0) {\n      space = rest.length < max ? rest.length : rest.lastIndexOf(\" \", col);\n      br = space > 0 && space < col ? space : rest.length === max && rest[rest.length - 1] === \" \" ? max : col;\n\n      words.push(rest.slice(0, br));\n      rest = rest.slice(br).replace(/^\\s+/, \"\");\n    }\n\n    // Return words\n    return words;\n  }, initial);\n}\n\n/**\n * Pads the current string with spaces\n *\n * The resulting string reaches a given length.\n *\n * The padding is applied from the end of the current string.\n *\n * @param {string} str String to pad\n * @param {number} len Maximum length\n * @returns {string} Padded string\n */\nfunction pad(str, len) {\n  // Check length\n  if (str.length >= len) {\n    return str;\n  }\n\n  // Return padded string;\n  var pad = Array(len - str.length + 1).join(\" \");\n  return str + pad;\n}\n\n\n/**\n * Build the action box\n *\n * The default action is say and the default wrap word value is 40, so wrap\n * words at or before the 40th column.\n *\n * @param {BoxAction} [action=say] The cow action\n * @param {string} [message] The message to show\n * @param {import(\".\").CowOptions[\"wrap\"]} [wrap] Word wrap column\n * @returns {string} The action box\n */\nfunction perform(action, message, wrap) {\n  // Adjust parameters\n  /** @type {BoxAction} */\n  var type = action === \"think\" ? \"think\" : \"say\";\n  var text = typeof message === \"string\" ? message : \"\";\n  var col;\n\n  // Fix wrap\n  switch (typeof wrap) {\n    case \"number\": col = wrap; break;\n    case \"string\": col = parseInt(wrap); break;\n    default: switch (wrap) {\n      case undefined:\n      case true: col = 40; break;\n      default:   col = undefined;\n    }\n  }\n\n  // Auxiliar variables\n  var limit = limits[type];\n  var lines = split(text, col);\n  var width = lines.map(function(line) {\n    return line.length;\n  }).reduce(function(prev, curr) {\n    return curr > prev ? curr : prev;\n  }, 0);\n\n\n  // Box top\n  var spanner = Array(width + 3);\n  var box = [\" \" + spanner.join(\"_\")];\n\n  // Box content for one single line\n  if (lines.length === 1) {\n    box.push(limit[0] + pad(lines[0], width) + limit[1]);\n  }\n\n  // Box content for multiple lines\n  else {\n    var last = lines.length - 1;\n    var i = 0;\n\n    do {\n      switch (i) {\n        case 0:    box.push(limit[2] + pad(lines[i], width) + limit[3]); break;\n        case last: box.push(limit[4] + pad(lines[i], width) + limit[5]); break;\n        default:   box.push(limit[6] + pad(lines[i], width) + limit[7]);\n      }\n    } while (++i <= last);\n  }\n\n  // Box bottom\n  box.push(\" \" + spanner.join(\"-\"), \"\");\n\n\n  // Return box\n  return box.join(\"\\n\");\n}\n\n\n/**\n * Build the say box\n *\n * The default wrap word value is 40, so wrap words at or before the 40th\n * column.\n *\n * @param {string} [message] The message to show\n * @param {number | false | null} [wrap=40] Word wrap column\n * @returns {string} The action box\n */\nfunction say(message, wrap) {\n  return perform(\"say\", message, wrap);\n}\n\n/**\n * Build the think box\n *\n * The default wrap word value is 40, so wrap words at or before the 40th\n * column.\n *\n * @param {string} [message] The message to show\n * @param {number | false | null} [wrap=40] Where the message should be wrapped\n * @returns {string} The action box\n */\nfunction think(message, wrap) {\n  return perform(\"think\", message, wrap);\n}\n\n\n/**\n * Build the action boxs for the cow message\n *\n * @module cowsayjs/lib/box\n */\nmodule.exports = {\n  perform: perform,\n  say: say,\n  think: think\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/lib/mode.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/lib/mode.js",
    "dependencies": [
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/lib/utils.js"
    ],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\nvar utils = require(\"../lib/utils\");\n\n\n/**\n * Eyes and tongue of the cow\n *\n * The eyes and tongue are hardcoded for some cows and cannot be changed.\n *\n * @typedef {Object} CowFace\n * @property {string} [eyes] Eyes of the cow\n * @property {string} [tongue] Tongue of the cow\n */\n\n/**\n * Name for known faces\n *\n * @typedef {Object} CowMode\n * @property {string} id The short name of the mode\n * @property {string} name The full name of the mode\n */\n\n/**\n * Cow mode and face\n *\n * @typedef {CowMode & CowFace} CowModeData\n */\n\n\n/**\n * All available modes data\n *\n * The default mode is in the first position.\n *\n * @type {ReadonlyArray<Readonly<CowModeData>>}\n * @constant\n * @package\n */\nvar modes = [\n  { id: \"u\", name: \"default\" },\n  { id: \"b\", name: \"borg\",     eyes: \"==\" },\n  { id: \"d\", name: \"dead\",     eyes: \"xx\", tongue: \"U \" },\n  { id: \"g\", name: \"greedy\",   eyes: \"$$\" },\n  { id: \"p\", name: \"paranoia\", eyes: \"@@\" },\n  { id: \"s\", name: \"stoned\",   eyes: \"**\", tongue: \"U \" },\n  { id: \"t\", name: \"tired\",    eyes: \"--\" },\n  { id: \"w\", name: \"wired\",    eyes: \"OO\" },\n  { id: \"y\", name: \"youthful\", eyes: \"..\" }\n];\n\n/**\n * Custom modes data\n *\n * @type {Readonly<CowModeData>[]}\n * @constant\n */\nvar customModes = [];\n\n\n/**\n * Create a full deep copy of the given cow mode data\n *\n * @param {CowModeData} modeData Cow mode data to copy\n * @returns {CowModeData} A copy of the given cow mode data\n */\nfunction copyModeData(modeData) {\n  return {\n    id: modeData.id,\n    name: modeData.name,\n    eyes: modeData.eyes,\n    tongue: modeData.tongue\n  };\n}\n\n\n/**\n * Get the mode for the giving face\n *\n * If the face is not found, the default mode is returned.\n *\n * @param {CowFace} face The cow face\n * @returns {CowMode} The matching cow mode\n */\nfunction faceMode(face) {\n  /** @type {CowMode | undefined} */\n  var mode;\n\n  // Find mode\n  if (typeof face === \"object\" && face !== null) {\n    mode = utils.find(modes.concat(customModes), function(mode) {\n      return mode.eyes === face.eyes && mode.tongue === face.tongue;\n    });\n  }\n\n  // Get default mode if is not found\n  if (mode === undefined) {\n    mode = modes[0];\n  }\n\n  // Return a copy of the mode\n  return {\n    id: mode.id,\n    name: mode.name,\n  };\n}\n\n/**\n * Get the face for the giving mode\n *\n * If the mode is not found, the default face is returned.\n *\n * @param {string} [id] The id or name of the cow mode\n * @returns {CowFace} The matching cow face\n */\nfunction modeFace(id) {\n  /** @type {CowFace | undefined} */\n  var face;\n\n  // Find face\n  if (typeof id === \"string\") {\n    face = utils.find(modes.concat(customModes), function(mode) {\n      return mode.id === id || mode.name === id;\n    });\n  }\n\n  // Get default face if is not found\n  if (face === undefined) {\n    face = modes[0];\n  }\n\n  // Return a copy of the face\n  return {\n    eyes: face.eyes,\n    tongue: face.tongue\n  };\n}\n\n/**\n * Add a new cow mode data to the custom cow mode data list\n *\n * Cow mode data id should match with the first name letter (case sensitive) and\n * should be different to any existing option.\n *\n * @param {CowModeData} modeData Cow mode data to add\n * @returns {boolean} Whether the cow mode data could be added\n */\nfunction addMode(modeData) {\n  // Validate type and format\n  var valid = true;\n  valid = valid && typeof modeData === \"object\" && modeData !== null && !Array.isArray(modeData);\n  valid = valid && typeof modeData.id === \"string\" && modeData.id.length === 1;\n  valid = valid && typeof modeData.name === \"string\" && modeData.id === modeData.name[0];\n  valid = valid && (typeof modeData.eyes === \"undefined\" || typeof modeData.eyes === \"string\");\n  valid = valid && (typeof modeData.tongue === \"undefined\" || typeof modeData.tongue === \"string\");\n\n  if (!valid) {\n    return false;\n  }\n\n  // Check if cow mode data already exists\n  var ind = modes.concat(customModes).findIndex(function(mode) {\n    return mode.id === modeData.id;\n  });\n\n  if (ind !== -1) {\n    return false;\n  }\n\n  // Check reserved id\n  var options = [ \"h\", \"e\", \"f\", \"l\", \"n\", \"r\", \"T\", \"W\" ];\n\n  if (options.includes(modeData.id)) {\n    return false;\n  }\n\n  // Add and sort custom cow mode data list\n  customModes.push(copyModeData(modeData));\n  customModes.sort(function(a, b) {\n    return a.id.localeCompare(b.id);\n  });\n\n  return true;\n}\n\n/**\n * Remove a cow mode data from the custom cow mode data list\n *\n * @param {string} id The id or name of the cow mode\n * @return {CowModeData | undefined} Removed cow mode data\n */\nfunction removeMode(id) {\n  // Return undefined for not valid string\n  if (typeof id !== \"string\") {\n    return undefined;\n  }\n\n  // Get cow index\n  var ind = customModes.findIndex(function(face) {\n    return face.id === id || face.name === id;\n  });\n\n  // Remove cow mode data from custom mode data list and return it\n  if (ind !== -1) {\n    return customModes.splice(ind, 1)[0];\n  }\n\n  // Not found cow mode data\n  return undefined;\n}\n\n\n/**\n * Manage cow modes and faces\n *\n * @module cowsay/lib/mode\n */\nmodule.exports = {\n  modes: modes.map(copyModeData),\n  customModes: customModes,\n  faceMode: faceMode,\n  modeFace: modeFace,\n  addMode: addMode,\n  removeMode: removeMode\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/lib/utils.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/lib/utils.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/**\n * Predicate finder function\n *\n * @template T\n * @callback Predicate<T>\n * @param {T} value Current value\n * @param {number} index Current index\n * @param {T[]} obj The array that `find` was called on\n * @returns {boolean} Whether the predicate is true\n * @package\n */\n\n/**\n * Own find into array implementation\n *\n * @template T\n * @param {Array<T>} arr Array\n * @param {Predicate<T>} predicate Finder function\n * @returns {T | undefined} Find result\n * @see Array.find\n */\nfunction find(arr, predicate) {\n  // For each element\n  for (var i = 0; i < arr.length; ++i) {\n    var elem = arr[i];\n\n    // Return the element if predicate is true\n    if (predicate(elem, i, arr)) {\n      return elem;\n    }\n  }\n\n  // Undefined if element is not found\n  return undefined;\n}\n\n\n/**\n * Util helpers functions\n *\n * @module cowsay/lib/utils\n */\nmodule.exports = {\n  find: find\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/index.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/index.js",
    "dependencies": [
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/lib/utils.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/default.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/apt.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/beavis.zen.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/blowfish.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/bong.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/bud-frogs.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/bunny.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/calvin.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/cheese.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/cock.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/cower.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/daemon.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/dragon-and-cow.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/dragon.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/duck.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/elephant-in-snake.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/elephant.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/eyes.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/flaming-sheep.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/fox.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/ghostbusters.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/gnu.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/head-in.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/hellokitty.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/kangaroo.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/kiss.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/kitty.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/koala.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/kosh.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/luke-koala.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/mech-and-cow.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/meow.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/milk.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/moofasa.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/moose.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/mutilated.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/pony-smaller.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/pony.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/ren.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/satanic.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/sheep.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/skeleton.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/small.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/snowman.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/sodomized.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/stegosaurus.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/stimpy.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/supermilker.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/surgery.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/suse.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/telebears.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/three-eyes.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/turkey.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/turtle.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/tux.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/udder.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/unipony-smaller.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/unipony.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/vader-koala.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/vader.cow.js",
      "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/www.cow.js"
    ],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\nvar utils = require(\"../lib/utils\");\n\n\n/**\n * Position index\n *\n * @typedef {[ number, number ]} Position\n * @package\n */\n\n\n/**\n * Cow values to interpolate\n *\n * @typedef {Object} CowTemplateArgs\n * @property {ReadonlyArray<Position>} pos Position indexes\n * @property {string} str String to interpolate\n * @package\n */\n\n\n/**\n * Cow action\n *\n * @typedef {\"o\" | \"\\\\\"} CowAction\n */\n\n\n/**\n * Cow name\n *\n * @typedef {Object} CowName\n * @property {string} name Cow name\n * @package\n */\n\n/**\n * Cow without name\n *\n * @typedef {Object} CowBase\n * @property {string} [defEyes] Default eyes\n * @property {string} [defTongue] Default tongue\n * @property {ReadonlyArray<string>} template Cow template\n * @property {ReadonlyArray<Position>} [actionPos] Action position indexes\n * @property {ReadonlyArray<Position>} [eyesPos] Eyes position indexes\n * @property {ReadonlyArray<Position>} [tonguePos] Tongue position indexes\n */\n\n/**\n * Cow\n *\n * @typedef {CowBase & CowName} Cow\n */\n\n\n/**\n * Cows list\n *\n * The default cow is in the first position.\n *\n * @type {ReadonlyArray<Readonly<Cow>>}\n * @constant\n * @package\n */\nvar corral = [\n  require(\"./default.cow\"),\n  require(\"./apt.cow\"),\n  require(\"./beavis.zen.cow\"),\n  require(\"./blowfish.cow\"),\n  require(\"./bong.cow\"),\n  require(\"./bud-frogs.cow\"),\n  require(\"./bunny.cow\"),\n  require(\"./calvin.cow\"),\n  require(\"./cheese.cow\"),\n  require(\"./cock.cow\"),\n  require(\"./cower.cow\"),\n  require(\"./daemon.cow\"),\n  require(\"./dragon-and-cow.cow\"),\n  require(\"./dragon.cow\"),\n  require(\"./duck.cow\"),\n  require(\"./elephant-in-snake.cow\"),\n  require(\"./elephant.cow\"),\n  require(\"./eyes.cow\"),\n  require(\"./flaming-sheep.cow\"),\n  require(\"./fox.cow\"),\n  require(\"./ghostbusters.cow\"),\n  require(\"./gnu.cow\"),\n  require(\"./head-in.cow\"),\n  require(\"./hellokitty.cow\"),\n  require(\"./kangaroo.cow\"),\n  require(\"./kiss.cow\"),\n  require(\"./kitty.cow\"),\n  require(\"./koala.cow\"),\n  require(\"./kosh.cow\"),\n  require(\"./luke-koala.cow\"),\n  require(\"./mech-and-cow.cow\"),\n  require(\"./meow.cow\"),\n  require(\"./milk.cow\"),\n  require(\"./moofasa.cow\"),\n  require(\"./moose.cow\"),\n  require(\"./mutilated.cow\"),\n  require(\"./pony-smaller.cow\"),\n  require(\"./pony.cow\"),\n  require(\"./ren.cow\"),\n  require(\"./satanic.cow\"),\n  require(\"./sheep.cow\"),\n  require(\"./skeleton.cow\"),\n  require(\"./small.cow\"),\n  require(\"./snowman.cow\"),\n  require(\"./sodomized.cow\"),\n  require(\"./stegosaurus.cow\"),\n  require(\"./stimpy.cow\"),\n  require(\"./supermilker.cow\"),\n  require(\"./surgery.cow\"),\n  require(\"./suse.cow\"),\n  require(\"./telebears.cow\"),\n  require(\"./three-eyes.cow\"),\n  require(\"./turkey.cow\"),\n  require(\"./turtle.cow\"),\n  require(\"./tux.cow\"),\n  require(\"./udder.cow\"),\n  require(\"./unipony-smaller.cow\"),\n  require(\"./unipony.cow\"),\n  require(\"./vader-koala.cow\"),\n  require(\"./vader.cow\"),\n  require(\"./www.cow\")\n];\n\n/**\n * Custom cows list\n *\n * @type {Readonly<Cow>[]}\n * @constant\n * @package\n */\nvar customCorral = [];\n\n\n/**\n * Truncate string to the given length\n *\n * @param {string | undefined} str String to truncate\n * @param {number} len Maximum length\n * @returns {string} Truncated string\n * @package\n */\nfunction truncate(str, len) {\n  return typeof str === \"string\" ? str.slice(0, len) : \"\";\n}\n\n/**\n * Force cow value to the given lenght at least\n *\n * @param {string | undefined} value Cow value\n * @param {string | undefined} empty Default value for empty value\n * @param {string | undefined} undef Default value for undefined value\n * @param {number} len Maximum length\n * @returns {string} Fixed value\n * @package\n */\nfunction fix(value, empty, undef, len) {\n  if (typeof value !== \"string\") {\n    return truncate(undef, len);\n  }\n\n  if (value.length === 0) {\n    return truncate(empty, len);\n  }\n\n  return truncate(value, len);\n}\n\n\n/**\n * Check if the given position array is valid\n *\n * @param {ReadonlyArray<Position> | undefined} arr Position array\n * @returns Whether the position array is valid\n * @package\n */\nfunction validatePositionArray(arr) {\n  // Undefined arrays are allowed\n  if (arr === undefined) {\n    return true;\n  }\n\n  // Not arrays are not allowed\n  if (!Array.isArray(arr)) {\n    return false;\n  }\n\n  // Validate format of every position\n  return arr.every(function(pos) {\n    return Array.isArray(pos) && pos.length === 2 && typeof pos[0] === \"number\" && typeof pos[1] === \"number\";\n  });\n}\n\n\n/**\n * Create a full deep copy of the given cow\n *\n * @param {Cow} cow Cow to copy\n * @returns {Cow} A copy of the given cow\n * @package\n */\nfunction copyCow(cow) {\n  /**\n   * Copy the given position indexes\n   *\n   * @param {Readonly<Position>} pos Position indexes\n   * @returns {Position} A copy of the position indexes\n   */\n  var copier = function(pos) {\n    return [ pos[0], pos[1] ];\n  };\n\n  return {\n    name: cow.name,\n    defEyes: cow.defEyes,\n    defTongue: cow.defTongue,\n    template: cow.template.slice(),\n    actionPos: cow.actionPos ? cow.actionPos.map(copier) : undefined,\n    eyesPos: cow.eyesPos ? cow.eyesPos.map(copier) : undefined,\n    tonguePos: cow.tonguePos ? cow.tonguePos.map(copier) : undefined,\n  };\n}\n\n/**\n * Validate the given custom cow\n *\n * @param {Cow & CowBase} cow Custom cow to validata\n * @param {boolean} [name=false] Validate name\n * @returns {boolean} Whether the custom cow is valid\n */\nfunction validateCow(cow, name) {\n  var valid = true;\n  valid = valid && typeof cow === \"object\" && cow !== null && !Array.isArray(cow);\n  valid = valid && Array.isArray(cow.template);\n  valid = valid && cow.template.every(function(line) { return typeof line === \"string\"; });\n  valid = valid && (cow.defEyes === undefined || typeof cow.defEyes === \"string\");\n  valid = valid && (cow.defTongue === undefined || typeof cow.defTongue === \"string\");\n  valid = valid && validatePositionArray(cow.actionPos);\n  valid = valid && validatePositionArray(cow.eyesPos);\n  valid = valid && validatePositionArray(cow.tonguePos);\n\n  if (name) {\n    valid = valid && typeof cow.name === \"string\" && cow.name.length > 0;\n  }\n\n  return valid;\n}\n\n/**\n * Find a cow in the corral by name\n *\n * @param {string} name Cow name\n * @returns {Cow} Matching cow\n */\nfunction getCow(name) {\n  /** @type {Cow | undefined} */\n  var cow;\n\n  // Find cow\n  if (typeof name === \"string\") {\n    cow = utils.find(corral.concat(customCorral), function(cow) {\n      return cow.name === name;\n    });\n  }\n\n  // Get default cow if is not found\n  if (cow === undefined) {\n    cow = corral[0];\n  }\n\n  // Return a copy of the cow\n  return copyCow(cow);\n}\n\n/**\n * Add a new cow to the custom corral\n *\n * @param {Cow} cow New cow to add\n * @returns {boolean} Whether the cow could be added\n */\nfunction addCow(cow) {\n  if (!validateCow(cow, true)) {\n    return false;\n  }\n\n  // Check if the cow already exists\n  if (getCow(cow.name).name === cow.name) {\n    return false;\n  }\n\n  // Add cow and sort corral\n  customCorral.push(cow);\n  customCorral.sort(function(a, b) {\n    return a.name.localeCompare(b.name);\n  });\n\n  return true;\n}\n\n/**\n * Remove a cow from the custom corral\n *\n * @param {string} name Cow name\n * @returns {Cow | undefined} Removed cow\n */\nfunction removeCow(name) {\n  // Return undefined for not valid string\n  if (typeof name !== \"string\") {\n    return undefined;\n  }\n\n  // Get cow index\n  var ind = customCorral.findIndex(function(cow) {\n    return cow.name === name;\n  });\n\n  // Remove cow from corral and return it\n  if (ind !== -1) {\n    return customCorral.splice(ind, 1)[0];\n  }\n\n  // Not found cow\n  return undefined;\n}\n\n\n\n/**\n * Cow renderer function\n *\n * @param {CowBase} cow Cow to render\n * @param {CowAction} [action] Action\n * @param {string} [eyes] Eyes\n * @param {string} [tongue] Tongue\n * @returns {string} Rendered cow\n */\nfunction renderCow(cow, action, eyes, tongue) {\n  // Copy template\n  var lines = cow.template.slice();\n\n  // Get values to interpolate\n  /** @type {Readonly<CowTemplateArgs>[]} */\n  var values = [];\n  var act = -1;\n\n  if (cow.tonguePos) {\n    values.push({ pos: cow.tonguePos, str: fix(tongue, cow.defTongue, \"  \", 2) });\n  }\n\n  if (cow.eyesPos) {\n    values.push({ pos: cow.eyesPos, str: fix(eyes, cow.defEyes, \"oo\", 2) });\n  }\n\n  if (cow.actionPos) {\n    values.push({ pos: cow.actionPos, str: fix(action, undefined, undefined, 1) });\n    act = values.length - 1;\n  }\n\n  // Interpolate values\n  values.forEach(function(val, i) {\n    // Position indexes fixer and face position index flag\n    var fix = 0;\n    var f = i !== act;\n\n    val.pos.forEach(function(pos, j) {\n      var char = val.str[j] || (f && j === 1 ? \"\" : val.str.slice(-1));\n      var pos0 = pos[0];\n      var pos1 = pos[1] - fix;\n      var line = lines[pos0];\n      lines[pos0] = line.slice(0, pos1) + char + line.slice(pos1 + 1);\n\n      if (char.length === 0) {\n        ++fix;\n      }\n    });\n  });\n\n  return lines.join(\"\\n\");\n}\n\n\n/**\n * Cows collection\n *\n * @module cowsayjs/cows\n */\nmodule.exports = {\n  corral: corral.map(copyCow),\n  customCorral: customCorral,\n  validateCow: validateCow,\n  getCow: getCow,\n  addCow: addCow,\n  removeCow: removeCow,\n  renderCow: renderCow\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/default.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/default.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"default\",\n  template: [\n    \"        \\\\   ^__^\",\n    \"         \\\\  (oo)\\\\_______\",\n    \"            (__)\\\\       )\\\\/\\\\\",\n    \"                ||----w |\",\n    \"                ||     ||\"\n  ],\n  actionPos: [\n    [ 0, 8 ],\n    [ 1, 9 ]\n  ],\n  eyesPos: [\n    [ 1, 13 ],\n    [ 1, 14 ]\n  ],\n  tonguePos: [\n    [ 3, 13 ],\n    [ 3, 14 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/apt.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/apt.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"apt\",\n  template: [\n    \"       \\\\ (__)\",\n    \"         (oo)\",\n    \"   /------\\\\/\",\n    \"  / |    ||\",\n    \" *  /\\\\---/\\\\\",\n    \"    ~~   ~~\"\n  ],\n  actionPos: [\n    [ 0, 7 ]\n  ],\n  eyesPos: [\n    [ 1, 10 ],\n    [ 1, 11 ],\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/beavis.zen.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/beavis.zen.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"beavis.zen\",\n  template: [\n    \"   \\\\        __------~~-,\",\n    \"    \\\\     ,'            ,\",\n    \"          /               \\\\\",\n    \"         /                :\",\n    \"        |                  '\",\n    \"        |                  |\",\n    \"        |                  |\",\n    \"         |   _--           |\",\n    \"         _| =-.     .-.   ||\",\n    \"         o|/o/       _.   |\",\n    \"         /  ~          \\\\ |\",\n    \"       (____@)  ___~    |\",\n    \"          |_===~~~.`    |\",\n    \"       _______.--~     |\",\n    \"       \\\\________       |\",\n    \"                \\\\      |\",\n    \"              __/-___-- -__\",\n    \"             /            _ \\\\\"\n  ],\n  actionPos: [\n    [ 0, 3 ],\n    [ 1, 4 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/blowfish.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/blowfish.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"blowfish\",\n  template: [\n    \"   \\\\\",\n    \"    \\\\\",\n    \"               |    .\",\n    \"           .   |L  /|\",\n    \"       _ . |\\\\ _| \\\\--+._/| .\",\n    \"      / ||\\\\| Y J  )   / |/| ./\",\n    \"     J  |)'( |        ` F`.'/\",\n    \"   -<|  F         __     .-<\",\n    \"     | /       .-'. `.  /-. L___\",\n    \"     J \\\\      <    \\\\  | | O\\\\|.-'\",\n    \"   _J \\\\  .-    \\\\/ O | | \\\\  |F\",\n    \"  '-F  -<_.     \\\\   .-'  `-' L__\",\n    \" __J  _   _.     >-'  )._.   |-'\",\n    \" `-|.'   /_.           \\\\_|   F\",\n    \"   /.-   .                _.<\",\n    \"  /'    /.'             .'  `\\\\\",\n    \"   /L  /'   |/      _.-'-\\\\\",\n    \"  /'J       ___.---'\\\\|\",\n    \"    |\\\\  .--' V  | `. `\",\n    \"    |/`. `-.     `._)\",\n    \"       / .-.\\\\\",\n    \" VK    \\\\ (  `\\\\\",\n    \"        `.\\\\\",\n    \"\"\n  ],\n  actionPos: [\n    [ 0, 3 ],\n    [ 1, 4 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/bong.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/bong.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"bong\",\n  template: [\n    \"         \\\\\",\n    \"          \\\\\",\n    \"            ^__^ \",\n    \"    _______/(oo)\",\n    \"/\\\\/(       /(__)\",\n    \"   | W----|| |~|\",\n    \"   ||     || |~|  ~~\",\n    \"             |~|  ~\",\n    \"             |_| o\",\n    \"             |#|/\",\n    \"            _+#+_\"\n  ],\n  actionPos: [\n    [ 0, 9 ],\n    [ 1, 10 ]\n  ],\n  eyesPos: [\n    [ 3, 13 ],\n    [ 3, 14 ],\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/bud-frogs.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/bud-frogs.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"bud-frogs\",\n  template: [\n    \"     \\\\\",\n    \"      \\\\\",\n    \"          oO)-.                       .-(Oo\",\n    \"         /__  _\\\\                     /_  __\\\\\",\n    \"         \\\\  \\\\(  |     ()~()         |  )/  /\",\n    \"          \\\\__|\\\\ |    (-___-)        | /|__/\",\n    \"          '  '--'    ==`-'==        '--'  '\"\n  ],\n  actionPos: [\n    [ 0, 5 ],\n    [ 1, 6 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/bunny.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/bunny.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"bunny\",\n  template: [\n    \"  \\\\\",\n    \"   \\\\   \\\\\",\n    \"        \\\\ /\\\\\",\n    \"        ( )\",\n    \"      .( o ).\"\n  ],\n  actionPos: [\n    [ 0, 2 ],\n    [ 1, 3 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/calvin.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/calvin.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"calvin\",\n  template: [\n    \" \\\\                   .,\",\n    \"   \\\\         .      .TR   d'\",\n    \"     \\\\      k,l    .R.b  .t .Je\",\n    \"       \\\\   .P q.   a|.b .f .Z%\",\n    \"           .b .h  .E` # J: 2`     .\",\n    \"      .,.a .E  ,L.M'  ?:b `| ..J9!`.,\",\n    \"       q,.h.M`   `..,   ..,\\\"\\\"` ..2\\\"`\",\n    \"       .M, J8`   `:       `   3;\",\n    \"   .    Jk              ...,   `^7\\\"90c.\",\n    \"    j,  ,!     .7\\\"'`j,.|   .n.   ...\",\n    \"   j, 7'     .r`     4:      L   `...\",\n    \"  ..,m.      J`    ..,|..    J`  7TWi\",\n    \"  ..JJ,.:    %    oo      ,. ....,\",\n    \"    .,E      3     7`g.M:    P  41\",\n    \"   JT7\\\"'      O.   .J,;     ``  V\\\"7N.\",\n    \"   G.           \\\"\\\"Q+  .Zu.,!`      Z`\",\n    \"   .9.. .         J&..J!       .  ,:\",\n    \"      7\\\"9a                    JM\\\"!\",\n    \"         .5J.     ..        ..F`\",\n    \"            78a..   `    ..2'\",\n    \"                J9Ksaw0\\\"'\",\n    \"               .EJ?A...a.\",\n    \"               q...g...gi\",\n    \"              .m...qa..,y:\",\n    \"              .HQFNB&...mm\",\n    \"               ,Z|,m.a.,dp\",\n    \"            .,?f` ,E?:\\\"^7b\",\n    \"            `A| . .F^^7'^4,\",\n    \"             1.MMMMMMMMMMMQzna,\",\n    \"         ...f\\\"A.JdT     J:    Jp,\",\n    \"          `JNa..........A....af`\",\n    \"               `^^^^^'`\"\n  ],\n  actionPos: [\n    [ 0, 1 ],\n    [ 1, 3 ],\n    [ 2, 5 ],\n    [ 3, 7 ],\n  ],\n  eyesPos: [\n    [ 12, 18 ],\n    [ 12, 19 ],\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/cheese.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/cheese.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"cheese\",\n  template: [\n    \"   \\\\\",\n    \"    \\\\\",\n    \"      _____   _________\",\n    \"     /     \\\\_/         |\",\n    \"    |                 ||\",\n    \"    |                 ||\",\n    \"   |    ###\\\\  /###   | |\",\n    \"   |     0  \\\\/  0    | |\",\n    \"  /|                 | |\",\n    \" / |        <        |\\\\ \\\\\",\n    \"| /|                 | | |\",\n    \"| |     \\\\_______/   |  | |\",\n    \"| |                 | / /\",\n    \"/||                 /|||\",\n    \"   ----------------|\",\n    \"        | |    | |\",\n    \"        ***    ***\",\n    \"       /___\\\\  /___\\\\\"\n  ],\n  actionPos: [\n    [ 0, 3 ],\n    [ 1, 4 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/cock.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/cock.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"cock\",\n  template: [\n    \"    \\\\\",\n    \"     \\\\  /\\\\/\\\\\",\n    \"       \\\\   /\",\n    \"       |  0 >>\",\n    \"       |___|\",\n    \" __((_<|   |\",\n    \"(          |\",\n    \"(__________)\",\n    \"   |      |\",\n    \"   |      |\",\n    \"   /\\\\     /\\\\\"\n  ],\n  actionPos: [\n    [ 0, 4 ],\n    [ 1, 5 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/cower.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/cower.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"cower\",\n  template: [\n    \"     \\\\\",\n    \"      \\\\\",\n    \"        ,__, |    | \",\n    \"        (oo)\\\\|    |___\",\n    \"        (__)\\\\|    |   )\\\\_\",\n    \"             |    |_w |  \\\\\",\n    \"             |    |  ||   *\\n\",\n    \"             Cower....\"\n  ],\n  actionPos: [\n    [ 0, 5 ],\n    [ 1, 6 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/daemon.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/daemon.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"daemon\",\n  template: [\n    \"   \\\\         ,        ,\",\n    \"    \\\\       /(        )`\",\n    \"     \\\\      \\\\ \\\\___   / |\",\n    \"            /- _  `-/  '\",\n    \"           (/\\\\/ \\\\ \\\\   /\\\\\",\n    \"           / /   | `    \\\\\",\n    \"           O O   ) /    |\",\n    \"           `-^--'`<     '\",\n    \"          (_.)  _  )   /\",\n    \"           `.___/`    /\",\n    \"             `-----' /\",\n    \"<----.     __ / __   \\\\\",\n    \"<----|====O)))==) \\\\) /====\",\n    \"<----'    `--' `.__,' \\\\\",\n    \"             |        |\",\n    \"              \\\\       /\",\n    \"        ______( (_  / \\\\______\",\n    \"      ,'  ,-----'   |        \\\\\",\n    \"      `--{__________)        \\\\/\"\n  ],\n  actionPos: [\n    [ 0, 3 ],\n    [ 1, 4 ],\n    [ 2, 5 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/dragon-and-cow.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/dragon-and-cow.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"dragon-and-cow\",\n  template: [\n    \"                       \\\\                    ^    /^\",\n    \"                        \\\\                  / \\\\  // \\\\\",\n    \"                         \\\\   |\\\\___/|      /   \\\\//  .\\\\\",\n    \"                          \\\\  /O  O  \\\\__  /    //  | \\\\ \\\\           *----*\",\n    \"                            /     /  \\\\/_/    //   |  \\\\  \\\\          \\\\   |\",\n    \"                            @___@`    \\\\/_   //    |   \\\\   \\\\         \\\\/\\\\ \\\\\",\n    \"                           0/0/|       \\\\/_ //     |    \\\\    \\\\         \\\\  \\\\\",\n    \"                       0/0/0/0/|        \\\\///      |     \\\\     \\\\       |  |\",\n    \"                    0/0/0/0/0/_|_ /   (  //       |      \\\\     _\\\\     |  /\",\n    \"                 0/0/0/0/0/0/`/,_ _ _/  ) ; -.    |    _ _\\\\.-~       /   /\",\n    \"                             ,-}        _      *-.|.-~-.           .~    ~\",\n    \"            \\\\     \\\\__/        `/\\\\      /                 ~-. _ .-~      /\",\n    \"             \\\\____(oo)           *.   }            {                   /\",\n    \"             (    (--)          .----~-.\\\\        \\\\-`                 .~\",\n    \"             //__\\\\\\\\  \\\\__ Ack!   ///.----..<        \\\\             _ -~\",\n    \"            //    \\\\\\\\               ///-._ _ _ _ _ _ _{^ - - - - ~\",\n  ],\n  actionPos: [\n    [ 0, 23 ],\n    [ 1, 24 ],\n    [ 2, 25 ],\n    [ 3, 26 ],\n  ],\n  eyesPos: [\n    [ 12, 19 ],\n    [ 12, 20 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/dragon.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/dragon.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"dragon\",\n  template: [\n    \"      \\\\                    / \\\\  //\\\\\",\n    \"       \\\\    |\\\\___/|      /   \\\\//  \\\\\\\\\",\n    \"            /0  0  \\\\__  /    //  | \\\\ \\\\    \",\n    \"           /     /  \\\\/_/    //   |  \\\\  \\\\  \",\n    \"           @_^_@'/   \\\\/_   //    |   \\\\   \\\\ \",\n    \"           //_^_/     \\\\/_ //     |    \\\\    \\\\\",\n    \"        ( //) |        \\\\///      |     \\\\     \\\\\",\n    \"      ( / /) _|_ /   )  //       |      \\\\     _\\\\\",\n    \"    ( // /) '/,_ _ _/  ( ; -.    |    _ _\\\\.-~        .-~~~^-.\",\n    \"  (( / / )) ,-{        _      `-.|.-~-.           .~         `.\",\n    \" (( // / ))  '/\\\\      /                 ~-. _ .-~      .-~^-.  \\\\\",\n    \" (( /// ))      `.   {            }                   /      \\\\  \\\\\",\n    \"  (( / ))     .----~-.\\\\        \\\\-'                 .~         \\\\  `. \\\\^-.\",\n    \"             ///.----..>        \\\\             _ -~             `.  ^-`  ^-_\",\n    \"               ///-._ _ _ _ _ _ _}^ - - - - ~                     ~-- ,.-~\",\n    \"                                                                  /.-~\"\n  ],\n  actionPos: [\n    [ 0, 6 ],\n    [ 1, 7 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/duck.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/duck.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"duck\",\n  template: [\n    \" \\\\\",\n    \"  \\\\\",\n    \"   \\\\ >()_\",\n    \"      (__)__ _\"\n  ],\n  actionPos: [\n    [ 0, 1 ],\n    [ 1, 2 ],\n    [ 2, 3 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/elephant-in-snake.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/elephant-in-snake.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"elephant-in-snake\",\n  template: [\n    \"       \\\\\",\n    \"        \\\\  ....\",\n    \"          .    ........\",\n    \"          .            .\",\n    \"          .             .\",\n    \"    .......              .........\",\n    \"    ..............................\",\n    \"Elephant inside ASCII snake\"\n  ],\n  actionPos: [\n    [ 0, 7 ],\n    [ 1, 8 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/elephant.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/elephant.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"elephant\",\n  template: [\n    \" \\\\     /\\\\  ___  /\\\\\",\n    \"  \\\\   // \\\\/   \\\\/ \\\\\\\\\",\n    \"     ((    O O    ))\",\n    \"      \\\\\\\\ /     \\\\ //\",\n    \"       \\\\/  | |  \\\\/ \",\n    \"        |  | |  |\",\n    \"        |  | |  |\",\n    \"        |   o   |\",\n    \"        | |   | |\",\n    \"        |m|   |m|\"\n  ],\n  actionPos: [\n    [ 0, 1 ],\n    [ 1, 2 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/eyes.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/eyes.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"eyes\",\n  template: [\n    \"    \\\\\",\n    \"     \\\\\",\n    \"                                   .::!!!!!!!:.\",\n    \"  .!!!!!:.                        .:!!!!!!!!!!!!\",\n    \"  ~~~~!!!!!!.                 .:!!!!!!!!!UWWW$$$\",\n    \"      :$$NWX!!:           .:!!!!!!XUWW$$$$$$$$$P\",\n    \"      $$$$$##WX!:      .<!!!!UW$$$$\\\"  $$$$$$$$#\",\n    \"      $$$$$  $$$UX   :!!UW$$$$$$$$$   4$$$$$*\",\n    \"      ^$$$B  $$$$\\\\     $$$$$$$$$$$$   d$$R\\\"\",\n    \"        \\\"*$bd$$$$      '*$$$$$$$$$$$o+#\\\"\",\n    \"             \\\"\\\"\\\"\\\"          \\\"\\\"\\\"\\\"\\\"\\\"\\\"\"\n  ],\n  actionPos: [\n    [ 0, 4 ],\n    [ 1, 5 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/flaming-sheep.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/flaming-sheep.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"flaming-sheep\",\n  template: [\n    \"  \\\\            .    .     .   \",\n    \"   \\\\      .  . .     `  ,     \",\n    \"    \\\\    .; .  : .' :  :  : . \",\n    \"     \\\\   i..`: i` i.i.,i  i . \",\n    \"      \\\\   `,--.|i |i|ii|ii|i: \",\n    \"           UooU\\\\.'@@@@@@`.||' \",\n    \"           \\\\__/(@@@@@@@@@@)'  \",\n    \"                (@@@@@@@@)    \",\n    \"                `YY~~~~YY'    \",\n    \"                 ||    ||     \"\n  ],\n  actionPos: [\n    [ 0, 2 ],\n    [ 1, 3 ],\n    [ 2, 4 ],\n    [ 3, 5 ],\n    [ 4, 6 ],\n  ],\n  eyesPos: [\n    [ 5, 12 ],\n    [ 5, 13 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/fox.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/fox.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"fox\",\n  template: [\n    \"         \\\\     ,-.      .-,\",\n    \"          \\\\    |-.\\\\ __ /.-|\",\n    \"           \\\\   \\\\  `    `  /\",\n    \"                /_     _ \\\\\",\n    \"              <  _`q  p _  >\",\n    \"              <.._=/  \\\\=_. >\",\n    \"                 {`\\\\()/`}`\\\\\",\n    \"                 {      }  \\\\\",\n    \"                 |{    }    \\\\\",\n    \"                 \\\\ '--'   .- \\\\\",\n    \"                 |-      /    \\\\\",\n    \"                 | | | | |     ;\",\n    \"                 | | |.;.,..__ |\",\n    \"               .-\\\"\\\";`         `|\",\n    \"              /    |           /\",\n    \"              `-../____,..---'`\"\n  ],\n  actionPos: [\n    [ 0, 9 ],\n    [ 1, 10 ],\n    [ 2, 11 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/ghostbusters.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/ghostbusters.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"ghostbusters\",\n  template: [\n    \"          \\\\\",\n    \"           \\\\\",\n    \"            \\\\          __---__\",\n    \"                    _-       /--______\",\n    \"               __--( /     \\\\ )XXXXXXXXXXX\\\\v.\",\n    \"             .-XXX(   O   O  )XXXXXXXXXXXXXXX-\",\n    \"            /XXX(       U     )        XXXXXXX\\\\\",\n    \"          /XXXXX(              )--_  XXXXXXXXXXX\\\\\",\n    \"         /XXXXX/ (      O     )   XXXXXX   \\\\XXXXX\\\\\",\n    \"         XXXXX/   /            XXXXXX   \\\\__ \\\\XXXXX\",\n    \"         XXXXXX__/          XXXXXX         \\\\__---->\",\n    \" ---___  XXX__/          XXXXXX      \\\\__         /\",\n    \"   \\\\-  --__/   ___/\\\\  XXXXXX            /  ___--/=\",\n    \"    \\\\-\\\\    ___/    XXXXXX              '--- XXXXXX\",\n    \"       \\\\-\\\\/XXX\\\\ XXXXXX                      /XXXXX\",\n    \"         \\\\XXXXXXXXX   \\\\                    /XXXXX/\",\n    \"          \\\\XXXXXX      >                 _/XXXXX/\",\n    \"            \\\\XXXXX--__/              __-- XXXX/\",\n    \"             -XXXXXXXX---------------  XXXXXX-\",\n    \"                \\\\XXXXXXXXXXXXXXXXXXXXXXXXXX/\",\n    \"                  \\\"\\\"VXXXXXXXXXXXXXXXXXXV\\\"\\\"\"\n  ],\n  actionPos: [\n    [ 0, 10 ],\n    [ 1, 11 ],\n    [ 2, 12 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/gnu.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/gnu.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"gnu\",\n  template: [\n    \"    \\\\               ,-----._\",\n    \"  .  \\\\         .  ,'        `-.__,------._\",\n    \" //   \\\\      __\\\\\\\\'                        `-.\",\n    \"((    _____-'___))                           |\",\n    \" `:='/     (alf_/                            |\",\n    \" `.=|      |='                               |\",\n    \"    |)   O |                                  \\\\\",\n    \"    |      |                               /\\\\  \\\\\",\n    \"    |     /                          .    /  \\\\  \\\\\",\n    \"    |    .-..__            ___   .--' \\\\  |\\\\   \\\\  |\",\n    \"   |o o  |     ``--.___.  /   `-'      \\\\  \\\\\\\\   \\\\ |\",\n    \"    `--''        '  .' / /             |  | |   | \\\\\",\n    \"                 |  | / /              |  | |   mmm\",\n    \"                 |  ||  |              | /| |\",\n    \"                 ( .' \\\\ \\\\              || | |\",\n    \"                 | |   \\\\ \\\\            // / /\",\n    \"                 | |    \\\\ \\\\          || |_|\",\n    \"                /  |    |_/         /_|\",\n    \"               /__/\",\n  ],\n  actionPos: [\n    [ 0, 4 ],\n    [ 1, 5 ],\n    [ 2, 6 ]\n  ],\n  tonguePos: [\n    [ 12, 5 ],\n    [ 12, 6 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/head-in.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/head-in.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"head-in\",\n  template: [\n    \"    \\\\\",\n    \"     \\\\\",\n    \"    ^__^         /\",\n    \"    (oo)\\\\_______/  _________\",\n    \"    (__)\\\\       )=(  ____|_ \\\\_____\",\n    \"        ||----w |  \\\\ \\\\     \\\\_____ |\",\n    \"        ||     ||   ||           ||\"\n  ],\n  actionPos: [\n    [ 0, 4 ],\n    [ 1, 5 ]\n  ],\n  eyesPos: [\n    [ 3, 5 ],\n    [ 3, 6 ]\n  ],\n  tonguePos: [\n    [ 5, 5 ],\n    [ 5, 6 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/hellokitty.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/hellokitty.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"hellokitty\",\n  template: [\n    \"  \\\\\",\n    \"   \\\\\",\n    \"      /\\\\_)o<\",\n    \"     |      \\\\\",\n    \"     | O . O|\",\n    \"      \\\\_____/\"\n  ],\n  actionPos: [\n    [ 0, 2 ],\n    [ 1, 3 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/kangaroo.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/kangaroo.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"kangaroo\",\n  template: [\n    \"  \\\\       .\",\n    \"   \\\\      l\\\\ /\\\\\",\n    \"    \\\\     !)Y.))\",\n    \"         _\\\\| //\",\n    \"       ,/oo  \\\\\",\n    \"    .-+    _ /\",\n    \"   `-_--=-'/\",\n    \"         / /\",\n    \"        /  \\\\_\",\n    \"       Y  .  )\",\n    \" .--v--^--' /\\\"\\\\\",\n    \" \\\\/~\\\\/~T\\\"--' _ \\\\\",\n    \"       !  ./~ \\\" \\\\\",\n    \"       `\\\\.Y      Y    _\",\n    \"       (~~|      |   |^Y\",\n    \"       `\\\\. \\\\     |   l |\",\n    \"         T~\\\\^. Y |   / |\",\n    \"         | |\\\\| | !  l  |\",\n    \"         ! | Y | `\\\\/'. |\",\n    \"   ______L_j l j   ~\\\"  l\",\n    \" _/,_/, __ ~\\\"__ }____,/\",\n    \"~~~~~~~~~~~~~~~~~~~~~~~~~~~\"\n  ],\n  actionPos: [\n    [ 0, 2 ],\n    [ 1, 3 ],\n    [ 2, 4 ]\n  ],\n  eyesPos: [\n    [ 4, 9 ],\n    [ 4, 10 ]\n  ],\n  tonguePos: [\n    [ 7, 5 ],\n    [ 7, 6 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/kiss.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/kiss.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"kiss\",\n  template: [\n    \"     \\\\\",\n    \"      \\\\\",\n    \"             ,;;;;;;;,\",\n    \"            ;;;;;;;;;;;,\",\n    \"           ;;;;;'_____;'\",\n    \"           ;;;(/))))|((\\\\\",\n    \"           _;;((((((|))))\",\n    \"          / |_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\n    \"     .--~(  \\\\ ~))))))))))))\",\n    \"    /     \\\\  `\\\\-(((((((((((\\\\\\\\\",\n    \"    |    | `\\\\   ) |\\\\       /|)\",\n    \"     |    |  `. _/  \\\\_____/ |\",\n    \"      |    , `\\\\~            /\",\n    \"       |    \\\\  \\\\           /\",\n    \"      | `.   `\\\\|          /\",\n    \"      |   ~-   `\\\\        /\",\n    \"       \\\\____~._/~ -_,   (\\\\\",\n    \"        |-----|\\\\   \\\\    ';;\",\n    \"       |      | :;;;'     \\\\\",\n    \"      |  /    |            |\",\n    \"      |       |            |\"\n  ],\n  actionPos: [\n    [ 0, 5 ],\n    [ 1, 6 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/kitty.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/kitty.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"kitty\",\n  template: [\n    \"     \\\\\",\n    \"      \\\\\",\n    \"       (\\\"`-'  '-/\\\") .___..--' ' \\\"`-._\",\n    \"         ` *_ *  )    `-.   (      ) .`-.__. `)\",\n    \"         (_Y_.) ' ._   )   `._` ;  `` -. .-'\",\n    \"      _.. `--'_..-_/   /--' _ .' ,4\",\n    \"   ( i l ),-''  ( l i),'  ( ( ! .-'    \"\n  ],\n  actionPos: [\n    [ 0, 5 ],\n    [ 1, 5 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/koala.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/koala.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"koala\",\n  template: [\n    \"  \\\\\",\n    \"   \\\\\",\n    \"       ___  \",\n    \"     {~._.~}\",\n    \"      ( Y )\",\n    \"     ()~*~()   \",\n    \"     (_)-(_)   \"\n  ],\n  actionPos: [\n    [ 0, 2 ],\n    [ 1, 3 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/kosh.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/kosh.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"kosh\",\n  template: [\n    \"    \\\\\",\n    \"     \\\\\",\n    \"      \\\\\",\n    \"  ___       _____     ___\",\n    \" /   \\\\     /    /|   /   \\\\\",\n    \"|     |   /    / |  |     |\",\n    \"|     |  /____/  |  |     |     \",\n    \"|     |  |    |  |  |     |\",\n    \"|     |  | {} | /   |     |\",\n    \"|     |  |____|/    |     |\",\n    \"|     |    |==|     |     |\",\n    \"|      \\\\___________/      |\",\n    \"|                         |\",\n    \"|                         |\"\n  ],\n  actionPos: [\n    [ 0, 4 ],\n    [ 1, 5 ],\n    [ 2, 6 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/luke-koala.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/luke-koala.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"luke-koala\",\n  template: [\n    \"  \\\\\",\n    \"   \\\\          .\",\n    \"       ___   //\",\n    \"     {~._.~}// \",\n    \"      ( Y )K/  \",\n    \"     ()~*~()   \",\n    \"     (_)-(_)   \",\n    \"     Luke    \",\n    \"     Skywalker\",\n    \"     koala   \"\n  ],\n  actionPos: [\n    [ 0, 2 ],\n    [ 1, 3 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/mech-and-cow.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/mech-and-cow.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"mech-and-cow\",\n  template: [\n    \"                                   ,-----.\",\n    \"                                   |     |\",\n    \"                                ,--|     |-.\",\n    \"                         __,----|  |     | |\",\n    \"                       ,;::     |  `_____' |\",\n    \"                       `._______|    i^i   |\",\n    \"                                `----| |---'| .\",\n    \"                           ,-------._| |== ||//\",\n    \"                           |       |_|P`.  /'/\",\n    \"                           `-------' 'Y Y/'/'\",\n    \"                                     .== /_\",\n    \"   ^__^                             /   /'|  `i\",\n    \"   (oo)_______                   /'   /  |   |\",\n    \"   (__)       )/             /'    /   |   `i\",\n    \"       ||----w |           ___,;`----'.___L_,-'`__\",\n    \"       ||     ||          i_____;----.____i\\\"\\\"____\",\n    \"\"\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/meow.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/meow.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"meow\",\n  template: [\n    \"  \\\\\",\n    \"   \\\\ ,   _ ___.--'''`--''//-,-_--_.\",\n    \"      \\\\`\\\"' ` || \\\\\\\\ \\\\ \\\\\\\\/ / // / ,-\\\\\\\\`,_\",\n    \"     /'`  \\\\ \\\\ || Y  | \\\\|/ / // / - |__ `-,\",\n    \"    /@\\\"\\\\  ` \\\\ `\\\\ |  | ||/ // | \\\\/  \\\\  `-._`-,_.,\",\n    \"   /  _.-. `.-\\\\,___/\\\\ _/|_/_\\\\_\\\\/|_/ |     `-._._)\",\n    \"   `-'``/  /  |  // \\\\__/\\\\__  /  \\\\__/ \\\\\",\n    \"        `-'  /-\\\\/  | -|   \\\\__ \\\\   |-' |\",\n    \"          __/\\\\ / _/ \\\\/ __,-'   ) ,' _|'\",\n    \"         (((__/(((_.' ((___..-'((__,'\"\n  ],\n  actionPos: [\n    [ 0, 2 ],\n    [ 1, 3 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/milk.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/milk.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"milk\",\n  template: [\n    \" \\\\     ____________ \",\n    \"  \\\\    |__________|\",\n    \"      /           /\\\\\",\n    \"     /           /  \\\\\",\n    \"    /___________/___/|\",\n    \"    |          |     |\",\n    \"    |  ==\\\\ /== |     |\",\n    \"    |   O   O  | \\\\ \\\\ |\",\n    \"    |     <    |  \\\\ \\\\|\",\n    \"   /|          |   \\\\ \\\\\",\n    \"  / |  \\\\_____/ |   / /\",\n    \" / /|          |  / /|\",\n    \"/||\\\\|          | /||\\\\/\",\n    \"    -------------|   \",\n    \"        | |    | | \",\n    \"       <__/    \\\\__>\"\n  ],\n  actionPos: [\n    [ 0, 1 ],\n    [ 1, 2 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/moofasa.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/moofasa.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"moofasa\",\n  template: [\n    \"       \\\\    ____\",\n    \"        \\\\  /    \\\\\",\n    \"          | ^__^ |\",\n    \"          | (oo) |______\",\n    \"          | (__) |      )\\\\/\\\\\",\n    \"           \\\\____/|----w |\",\n    \"                ||     ||\",\n    \"\",\n    \"                 Moofasa\"\n  ],\n  actionPos: [\n    [ 0, 7 ],\n    [ 1, 8 ]\n  ],\n  eyesPos: [\n    [ 3, 13 ],\n    [ 3, 14 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/moose.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/moose.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"moose\",\n  template: [\n    \"  \\\\\",\n    \"   \\\\   \\\\_\\\\_    _/_/\",\n    \"    \\\\      \\\\__/\",\n    \"           (oo)\\\\_______\",\n    \"           (__)\\\\       )\\\\/\\\\\",\n    \"               ||----w |\",\n    \"               ||     ||\"\n  ],\n  actionPos: [\n    [ 0, 2 ],\n    [ 1, 3 ],\n    [ 2, 4 ]\n  ],\n  eyesPos: [\n    [ 3, 12 ],\n    [ 3, 13 ]\n  ],\n  tonguePos: [\n    [ 5, 12 ],\n    [ 5, 13 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/mutilated.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/mutilated.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"mutilated\",\n  template: [\n    \"       \\\\   \\\\_______\",\n    \" v__v   \\\\  \\\\   O   )\",\n    \" (oo)      ||----w |\",\n    \" (__)      ||     ||  \\\\/\\\\\",\n    \"    \"\n  ],\n  actionPos: [\n    [ 0, 7 ],\n    [ 1, 8 ]\n  ],\n  eyesPos: [\n    [ 2, 2 ],\n    [ 2, 3 ]\n  ],\n  tonguePos: [\n    [ 4, 2 ],\n    [ 4, 3 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/pony-smaller.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/pony-smaller.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"pony-smaller\",\n  template: [\n    \"     \\\\      _^^\",\n    \"      \\\\   _- oo\\\\\",\n    \"          \\\\----- \\\\______\",\n    \"                \\\\       )\\\\\",\n    \"                ||-----|| \\\\\",\n    \"                ||     ||\"\n  ],\n  actionPos: [\n    [ 0, 5 ],\n    [ 1, 6 ]\n  ],\n  eyesPos: [\n    [ 1, 13 ],\n    [ 1, 14 ]\n  ],\n  tonguePos: [\n    [ 3, 11 ],\n    [ 3, 12 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/pony.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/pony.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"pony\",\n  template: [\n    \"       \\\\          /\\\\/\\\\\",\n    \"        \\\\         \\\\/\\\\/\",\n    \"         \\\\        /   -\\\\\",\n    \"          \\\\     /  oo   -\\\\\",\n    \"           \\\\  /           \\\\\",\n    \"             |    ---\\\\    -\\\\\",\n    \"             \\\\--/     \\\\     \\\\\",\n    \"                       |      -\\\\\",\n    \"                        \\\\       -\\\\         -------------\\\\    /-\\\\\",\n    \"                         \\\\        \\\\-------/              ---/    \\\\\",\n    \"                          \\\\                                  |\\\\   \\\\\",\n    \"                           |                                 / |  |\",\n    \"                           \\\\                                |  \\\\  |\",\n    \"                            |                              /    \\\\ |\",\n    \"                            |                             /     \\\\ |\",\n    \"                             \\\\                             \\\\     \\\\|\",\n    \"                              -              /--------\\\\    |      o\",\n    \"                               \\\\+   +---------          \\\\   |\",\n    \"                                |   |                   |   \\\\\",\n    \"                                |   |                    \\\\   |\",\n    \"                                |   |                    |   \\\\\",\n    \"                                |   |                     \\\\   |\",\n    \"                                 \\\\  |                     |   |\",\n    \"                                 |  |                      \\\\  \\\\\",\n    \"                                 |  |                      |   |\",\n    \"                                 +--+                       ---+\"\n  ],\n  actionPos: [\n    [ 0, 7 ],\n    [ 1, 8 ],\n    [ 2, 9 ],\n    [ 3, 10 ],\n    [ 4, 11 ]\n  ],\n  eyesPos: [\n    [ 3, 19 ],\n    [ 3, 20 ]\n  ],\n  tonguePos: [\n    [ 7, 14 ],\n    [ 7, 15 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/ren.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/ren.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"ren\",\n  template: [\n    \"   \\\\\",\n    \"    \\\\\",\n    \"    ____  \",\n    \"   /# /_\\\\_\",\n    \"  |  |/o\\\\o\\\\\",\n    \"  |  \\\\\\\\_/_/\",\n    \" / |_   |  \",\n    \"|  ||\\\\_ ~| \",\n    \"|  ||| \\\\/  \",\n    \"|  |||_    \",\n    \" \\\\//  |    \",\n    \"  ||  |    \",\n    \"  ||_  \\\\   \",\n    \"  \\\\_|  o|  \",\n    \"  /\\\\___/   \",\n    \" /  ||||__ \",\n    \"    (___)_)\"\n  ],\n  actionPos: [\n    [ 0, 3 ],\n    [ 1, 4 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/satanic.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/satanic.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"satanic\",\n  template: [\n    \"     \\\\\",\n    \"      \\\\  (__)  \",\n    \"         (\\\\/)  \",\n    \"  /-------\\\\/    \",\n    \" / | 666 ||    \",\n    \"*  ||----||      \",\n    \"   ~~    ~~      \"\n  ],\n  actionPos: [\n    [ 0, 5 ],\n    [ 1, 6 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/sheep.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/sheep.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"sheep\",\n  template: [\n    \"  \\\\\",\n    \"   \\\\\",\n    \"       __     \",\n    \"      UooU\\\\.'@@@@@@`.\",\n    \"      \\\\__/(@@@@@@@@@@)\",\n    \"           (@@@@@@@@)\",\n    \"           `YY~~~~YY'\",\n    \"            ||    ||\"\n  ],\n  actionPos: [\n    [ 0, 2 ],\n    [ 1, 3 ]\n  ],\n  eyesPos: [\n    [ 3, 7 ],\n    [ 3, 8 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/skeleton.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/skeleton.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"skeleton\",\n  template: [\n    \"          \\\\      (__)      \",\n    \"           \\\\     /oo|  \",\n    \"            \\\\   (_\\\"_)*+++++++++*\",\n    \"                   //I#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\I\\\\\",\n    \"                   I[I|I|||||I I `\",\n    \"                   I`I'///'' I I\",\n    \"                   I I       I I\",\n    \"                   ~ ~       ~ ~\",\n    \"                     Scowleton\",\n  ],\n  actionPos: [\n    [ 0, 10 ],\n    [ 1, 11 ],\n    [ 2, 12 ]\n  ],\n  eyesPos: [\n    [ 1, 18 ],\n    [ 1, 19 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/small.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/small.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"small\",\n  eyes: \"..\",\n  template: [\n    \"       \\\\   ,__,\",\n    \"        \\\\  (..)____\",\n    \"           (__)    )\\\\\",\n    \"              ||--|| *\"\n  ],\n  defEyes: \"..\",\n  actionPos: [\n    [ 0, 7 ],\n    [ 1, 8 ]\n  ],\n  eyesPos: [\n    [ 1, 12 ],\n    [ 1, 13 ]\n  ],\n  tonguePos: [\n    [ 3, 12 ],\n    [ 3, 13 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/snowman.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/snowman.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"snowman\",\n  template: [\n    \"   \\\\\",\n    \" ___###\",\n    \"   /oo\\\\ |||\",\n    \"   \\\\  / \\\\|/\",\n    \"   /\\\"\\\"\\\\  I\",\n    \"()|    |(I)\",\n    \"   \\\\  /  I\",\n    \"  /\\\"\\\"\\\"\\\"\\\\ I\",\n    \" |      |I\",\n    \" |      |I\",\n    \"  \\\\____/ I\"\n  ],\n  actionPos: [\n    [ 0, 3 ]\n  ],\n  eyesPos: [\n    [ 2, 4 ],\n    [ 2, 5 ]\n  ],\n  tonguePos: [\n    [ 3, 4 ],\n    [ 3, 5 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/sodomized.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/sodomized.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"sodomized\",\n  template: [\n    \"      \\\\                _\",\n    \"       \\\\              (_)\",\n    \"        \\\\   ^__^       / \\\\\",\n    \"         \\\\  (oo)\\\\_____/_\\\\ \\\\\",\n    \"            (__)\\\\       ) /\",\n    \"                ||----w ((\",\n    \"                ||     ||>>\",\n  ],\n  actionPos: [\n    [ 0, 6 ],\n    [ 1, 7 ],\n    [ 2, 8 ],\n    [ 3, 9 ]\n  ],\n  eyesPos: [\n    [ 3, 13 ],\n    [ 3, 14 ]\n  ],\n  tonguePos: [\n    [ 5, 13 ],\n    [ 5, 14 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/stegosaurus.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/stegosaurus.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"stegosaurus\",\n  template: [\n    \"\\\\                             .       .\",\n    \" \\\\                           / `.   .' \\\"\",\n    \"  \\\\                  .---.  <    > <    >  .---.\",\n    \"   \\\\                 |    \\\\  \\\\ - ~ ~ - /  /    |\",\n    \"         _____          ..-~             ~-..-~\",\n    \"        |     |   \\\\~~~\\\\.'                    `./~~~/\",\n    \"       ---------   \\\\__/                        \\\\__/\",\n    \"      .'  O    \\\\     /               /       \\\\  \\\"\",\n    \"     (_____,    `._.'               |         }  \\\\/~~~/\",\n    \"      `----.          /       }     |        /    \\\\__/\",\n    \"            `-.      |       /      |       /      `. ,~~|\",\n    \"                ~-.__|      /_ - ~ ^|      /- _      `..-'\",\n    \"                     |     /        |     /     ~-.     `-. _  _  _\",\n    \"                     |_____|        |_____|         ~ - . _ _ _ _ _>\"\n  ],\n  actionPos: [\n    [ 0, 0 ],\n    [ 1, 1 ],\n    [ 2, 2 ],\n    [ 3, 3 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/stimpy.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/stimpy.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"stimpy\",\n  template: [\n    \"  \\\\     .    _  .    \",\n    \"   \\\\    |\\\\_|/__/|    \",\n    \"       / / \\\\/ \\\\  \\\\  \",\n    \"      /__|O||O|__ \\\\ \",\n    \"     |/_ \\\\_/\\\\_/ _\\\\ |  \",\n    \"     | | (____) | ||  \",\n    \"     \\\\/\\\\___/\\\\__/  // \",\n    \"     (_/         ||\",\n    \"      |          ||\",\n    \"      |          ||\\\\   \",\n    \"       \\\\        //_/  \",\n    \"        \\\\______//\",\n    \"       __ || __||\",\n    \"      (____(____)\"\n  ],\n  actionPos: [\n    [ 0, 2 ],\n    [ 1, 3 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/supermilker.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/supermilker.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"supermilker\",\n  template: [\n    \"  \\\\   ^__^\",\n    \"   \\\\  (oo)\\\\_______        ________\",\n    \"      (__)\\\\       )\\\\/\\\\    |Super |\",\n    \"          ||----W |       |Milker|\",\n    \"          ||    UDDDDDDDDD|______|\"\n  ],\n  actionPos: [\n    [ 0, 2 ],\n    [ 1, 3 ]\n  ],\n  eyesPos: [\n    [ 1, 7 ],\n    [ 1, 8 ]\n  ],\n  tonguePos: [\n    [ 3, 7 ],\n    [ 3, 8 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/surgery.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/surgery.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"surgery\",\n  template: [\n    \"          \\\\           \\\\  /\",\n    \"           \\\\           \\\\/\",\n    \"               (__)    /\\\\\",\n    \"               (oo)   O  O\",\n    \"               _\\\\/_   //\",\n    \"         *    (    ) //\",\n    \"          \\\\  (\\\\\\\\    //\",\n    \"           \\\\(  \\\\\\\\    )\",\n    \"            (   \\\\\\\\   )   /\\\\\",\n    \"  ___[\\\\______/^^^^^^^\\\\__/) o-)__\",\n    \" |\\\\__[=======______//________)__\\\\\",\n    \" \\\\|_______________//____________|\",\n    \"     |||      || //||     |||\",\n    \"     |||      || @.||     |||\",\n    \"      ||      \\\\/  .\\\\/      ||\",\n    \"                 . .\",\n    \"                '.'.`\",\n    \"\",\n    \"            COW-OPERATION\"\n  ],\n  actionPos: [\n    [ 0, 10 ],\n    [ 1, 11 ]\n  ],\n  eyesPos: [\n    [ 3, 16 ],\n    [ 3, 17 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/suse.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/suse.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"suse\",\n  template: [\n    \"  \\\\\",\n    \"   \\\\____\",\n    \"  /@    ~-.\",\n    \"  \\\\/ __ .- |\",\n    \"   // //  @\"\n  ],\n  actionPos: [\n    [ 0, 2 ],\n    [ 1, 3 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/telebears.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/telebears.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"telebears\",\n  template: [\n    \"      \\\\                _\",\n    \"       \\\\              (_)   <-- TeleBEARS\",\n    \"        \\\\   ^__^       / \\\\\",\n    \"         \\\\  (oo)\\\\_____/_\\\\ \\\\\",\n    \"            (__)\\\\  you  ) /\",\n    \"                ||----w ((\",\n    \"                ||     ||>> \"\n  ],\n  actionPos: [\n    [ 0, 6 ],\n    [ 1, 7 ],\n    [ 2, 8 ],\n    [ 3, 9 ]\n  ],\n  eyesPos: [\n    [ 3, 13 ],\n    [ 3, 14 ]\n  ],\n  tonguePos: [\n    [ 5, 13 ],\n    [ 5, 14 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/three-eyes.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/three-eyes.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"three-eyes\",\n  template: [\n    \"        \\\\  ^___^\",\n    \"         \\\\ (ooo)\\\\_______\",\n    \"           (___)\\\\       )\\\\/\\\\\",\n    \"                ||----w |\",\n    \"                ||     ||\"\n  ],\n  actionPos: [\n    [ 0, 8 ],\n    [ 1, 9 ]\n  ],\n  eyesPos: [\n    [ 1, 12 ],\n    [ 1, 13 ],\n    [ 1, 14 ]\n  ],\n  tonguePos: [\n    [ 3, 12 ],\n    [ 3, 13 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/turkey.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/turkey.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"turkey\",\n  template: [\n    \"  \\\\                                  ,+*^^*+___+++_\",\n    \"   \\\\                           ,*^^^^              )\",\n    \"    \\\\                       _+*                     ^**+_\",\n    \"     \\\\                    +^       _ _++*+_+++_,         )\",\n    \"              _+^^*+_    (     ,+*^ ^          \\\\+_        )\",\n    \"             {       )  (    ,(    ,_+--+--,      ^)      ^\\\\\",\n    \"            { (@)    } f   ,(  ,+-^ __*_*_  ^^\\\\_   ^\\\\       )\",\n    \"           {:;-/    (_+*-+^^^^^+*+*<_ _++_)_    )    )      /\",\n    \"          ( /  (    (        ,___    ^*+_+* )   <    <      \\\\\",\n    \"           U _/     )    *--<  ) ^\\\\-----++__)   )    )       )\",\n    \"            (      )  _(^)^^))  )  )\\\\^^^^^))^*+/    /       /\",\n    \"          (      /  (_))_^)) )  )  ))^^^^^))^^^)__/     +^^\",\n    \"         (     ,/    (^))^))  )  ) ))^^^^^^^))^^)       _)\",\n    \"          *+__+*       (_))^)  ) ) ))^^^^^^))^^^^^)____*^\",\n    \"          \\\\             \\\\_)^)_)) ))^^^^^^^^^^))^^^^)\",\n    \"           (_             ^\\\\__^^^^^^^^^^^^))^^^^^^^)\",\n    \"             ^\\\\___            ^\\\\__^^^^^^))^^^^^^^^)\\\\\\\\\",\n    \"                  ^^^^^\\\\uuu/^^\\\\uuu/^^^^\\\\^\\\\^\\\\^\\\\^\\\\^\\\\^\\\\^\\\\\",\n    \"                     ___) >____) >___   ^\\\\_\\\\_\\\\_\\\\_\\\\_\\\\_\\\\)\",\n    \"                    ^^^//\\\\\\\\_^^//\\\\\\\\_^       ^(\\\\_\\\\_\\\\_\\\\)\",\n    \"                      ^^^ ^^ ^^^ ^\"\n  ],\n  actionPos: [\n    [ 0, 2 ],\n    [ 1, 3 ],\n    [ 2, 4 ],\n    [ 3, 5 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/turtle.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/turtle.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"turtle\",\n  template: [\n    \"    \\\\                                  ___-------___\",\n    \"     \\\\                             _-~~             ~~-_\",\n    \"      \\\\                         _-~                    /~-_\",\n    \"             /^\\\\__/^\\\\         /~  \\\\                   /    \\\\\",\n    \"           /|  O|| O|        /      \\\\_______________/        \\\\\",\n    \"          | |___||__|      /       /                \\\\          \\\\\",\n    \"          |          \\\\    /      /                    \\\\          \\\\\",\n    \"          |   (_______) /______/                        \\\\_________ \\\\\",\n    \"          |         / /         \\\\                      /            \\\\\",\n    \"           \\\\         \\\\^\\\\\\\\         \\\\                  /               \\\\     /\",\n    \"             \\\\         ||           \\\\______________/      _-_       //\\\\__//\",\n    \"               \\\\       ||------_-~~-_ ------------- \\\\ --/~   ~\\\\    || __/\",\n    \"                 ~-----||====/~     |==================|       |/~~~~~\",\n    \"                  (_(__/  ./     /                    \\\\_\\\\      \\\\.\",\n    \"                         (_(___/                         \\\\_____)_)\"\n  ],\n  actionPos: [\n    [ 0, 4 ],\n    [ 1, 5 ],\n    [ 2, 6 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/tux.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/tux.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"tux\",\n  template: [\n    \"   \\\\\",\n    \"    \\\\\",\n    \"        .--.\",\n    \"       |o_o |\",\n    \"       |:_/ |\",\n    \"      //   \\\\ \\\\\",\n    \"     (|     | )\",\n    \"    /'\\\\_   _/`\\\\\",\n    \"    \\\\___)=(___/\",\n    \"\"\n  ],\n  actionPos: [\n    [ 0, 3 ],\n    [ 1, 4 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/udder.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/udder.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"udder\",\n  template: [\n    \"  \\\\\",\n    \"   \\\\    (__)\",\n    \"        o o\\\\\",\n    \"       ('') \\\\---------\",\n    \"          \\\\           \\\\\",\n    \"           |          |\\\\\",\n    \"           ||---(  )_|| *\",\n    \"           ||    UU  ||\",\n    \"           ==        ==\"\n  ],\n  actionPos: [\n    [ 0, 2 ],\n    [ 1, 3 ]\n  ],\n  eyesPos: [\n    [ 2, 8 ],\n    [ 2, 10 ]\n  ],\n  tonguePos: [\n    [ 4, 8 ],\n    [ 4, 9 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/unipony-smaller.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/unipony-smaller.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"unipony-smaller\",\n  template: [\n    \"   \\\\        \\\\\",\n    \"    \\\\        \\\\\",\n    \"     \\\\       _\\\\^\",\n    \"      \\\\    _- oo\\\\\",\n    \"           \\\\---- \\\\______\",\n    \"                 \\\\       )\\\\\",\n    \"                ||-----||  \\\\\",\n    \"                ||     ||\"\n  ],\n  actionPos: [\n    [ 0, 3 ],\n    [ 1, 4 ],\n    [ 2, 5 ],\n    [ 3, 6 ]\n  ],\n  eyesPos: [\n    [ 3, 14 ],\n    [ 3, 15 ]\n  ],\n  tonguePos: [\n    [ 5, 12 ],\n    [ 5, 13 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/unipony.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/unipony.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"unipony\",\n  template: [\n    \"   \\\\             \\\\\",\n    \"    \\\\             \\\\_\",\n    \"     \\\\             \\\\\\\\\",\n    \"      \\\\             \\\\\\\\/\\\\\",\n    \"       \\\\            _\\\\\\\\/\",\n    \"        \\\\         /   -\\\\\",\n    \"         \\\\      /  oo   -\\\\\",\n    \"          \\\\   /           \\\\\",\n    \"             |    ---\\\\    -\\\\\",\n    \"             \\\\--/     \\\\     \\\\\",\n    \"                       |      -\\\\\",\n    \"                        \\\\       -\\\\         -------------\\\\    /-\\\\\",\n    \"                         \\\\        \\\\-------/              ---/    \\\\\",\n    \"                          \\\\                                  |\\\\   \\\\\",\n    \"                           |                                 / |  |\",\n    \"                           \\\\                                |  \\\\  |\",\n    \"                            |                              /    \\\\ |\",\n    \"                            |                             /     \\\\ |\",\n    \"                             \\\\                             \\\\     \\\\|\",\n    \"                              -              /--------\\\\    |      o\",\n    \"                               \\\\+   +---------          \\\\   |\",\n    \"                                |   |                   |   \\\\\",\n    \"                                |   |                    \\\\   |\",\n    \"                                |   |                    |   \\\\\",\n    \"                                |   |                     \\\\   |\",\n    \"                                 \\\\  |                     |   |\",\n    \"                                 |  |                      \\\\  \\\\\",\n    \"                                 |  |                      |   |\",\n    \"                                 +--+                       ---+\"\n  ],\n  actionPos: [\n    [ 0, 3 ],\n    [ 1, 4 ],\n    [ 2, 5 ],\n    [ 3, 6 ],\n    [ 4, 7 ],\n    [ 5, 8 ],\n    [ 6, 9 ],\n    [ 7, 10 ]\n  ],\n  eyesPos: [\n    [ 6, 19 ],\n    [ 6, 20 ]\n  ],\n  tonguePos: [\n    [ 10, 14 ],\n    [ 10, 15 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/vader-koala.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/vader-koala.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"vader-koala\",\n  template: [\n    \"   \\\\\",\n    \"    \\\\        .\",\n    \"     .---.  //\",\n    \"    Y|o o|Y//\",\n    \"   /_(i=i)K/\",\n    \"   ~()~*~()~\",\n    \"    (_)-(_)\",\n    \"\",\n    \"     Darth\",\n    \"     Vader\",\n    \"     koala\"\n  ],\n  actionPos: [\n    [ 0, 3 ],\n    [ 1, 4 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/vader.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/vader.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"vader\",\n  template: [\n    \"        \\\\    ,-^-.\",\n    \"         \\\\   !oYo!\",\n    \"          \\\\ /./=\\\\.\\\\______\",\n    \"               ##        )\\\\/\\\\\",\n    \"                ||-----w||\",\n    \"                ||      ||\",\n    \"\",\n    \"               Cowth Vader\"\n  ],\n  actionPos: [\n    [ 0, 8 ],\n    [ 1, 9 ],\n    [ 2, 10 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/www.cow.js": {
    "id": "/home/xyz/Development/webpack-plugin-compartment-map/test/fixture-0/node_modules/cowsayjs/cows/www.cow.js",
    "dependencies": [],
    "type": "javascript/auto",
    "source": "\"use strict\";\n\n/** @type {import(\".\").Cow} */\nmodule.exports = {\n  name: \"www\",\n  template: [\n    \"        \\\\   ^__^\",\n    \"         \\\\  (oo)\\\\_______\",\n    \"            (__)\\\\       )\\\\/\\\\\",\n    \"                ||--WWW |\",\n    \"                ||     ||\"\n  ],\n  actionPos: [\n    [ 0, 8 ],\n    [ 1, 9 ]\n  ],\n  eyesPos: [\n    [ 1, 13 ],\n    [ 1, 14 ]\n  ],\n  tonguePos: [\n    [ 3, 13 ],\n    [ 3, 14 ]\n  ]\n};\n",
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "request",
      "userRequest",
      "rawRequest",
      "binary",
      "parser",
      "parserOptions",
      "generator",
      "generatorOptions",
      "resource",
      "resourceResolveData",
      "matchResource",
      "loaders",
      "error",
      "_source",
      "_sourceSizes",
      "_sourceTypes",
      "_lastSuccessfulBuildMeta",
      "_forceBuild",
      "_isEvaluatingSideEffects",
      "_addedSideEffectsBailout",
      "_ast",
      "constructor",
      "identifier",
      "readableIdentifier",
      "libIdent",
      "nameForCondition",
      "updateCacheModule",
      "cleanupForCache",
      "getUnsafeCacheData",
      "restoreFromUnsafeCache",
      "_restoreFromUnsafeCache",
      "createSourceForAsset",
      "_createLoaderContext",
      "getCurrentLoader",
      "createSource",
      "_doBuild",
      "markModuleAsErrored",
      "applyNoParseRule",
      "shouldPreventParsing",
      "_initBuildHash",
      "build",
      "getConcatenationBailoutReason",
      "getSideEffectsConnectionState",
      "getSourceTypes",
      "codeGeneration",
      "originalSource",
      "invalidateBuild",
      "needBuild",
      "size",
      "addCacheDependencies",
      "updateHash",
      "serialize",
      "deserialize"
    ]
  },
  "webpack/runtime/compat get default export": {
    "id": "webpack/runtime/compat get default export",
    "dependencies": [],
    "type": "runtime",
    "source": null,
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "name",
      "stage",
      "compilation",
      "chunk",
      "chunkGraph",
      "fullHash",
      "dependentHash",
      "_cachedGeneratedCode",
      "constructor",
      "generate"
    ]
  },
  "webpack/runtime/define property getters": {
    "id": "webpack/runtime/define property getters",
    "dependencies": [],
    "type": "runtime",
    "source": null,
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "name",
      "stage",
      "compilation",
      "chunk",
      "chunkGraph",
      "fullHash",
      "dependentHash",
      "_cachedGeneratedCode",
      "constructor",
      "generate"
    ]
  },
  "webpack/runtime/hasOwnProperty shorthand": {
    "id": "webpack/runtime/hasOwnProperty shorthand",
    "dependencies": [],
    "type": "runtime",
    "source": null,
    "keys": [
      "dependencies",
      "blocks",
      "parent",
      "type",
      "context",
      "layer",
      "needId",
      "debugId",
      "resolveOptions",
      "factoryMeta",
      "useSourceMap",
      "useSimpleSourceMap",
      "_warnings",
      "_errors",
      "buildMeta",
      "buildInfo",
      "presentationalDependencies",
      "codeGenerationDependencies",
      "name",
      "stage",
      "compilation",
      "chunk",
      "chunkGraph",
      "fullHash",
      "dependentHash",
      "_cachedGeneratedCode",
      "constructor",
      "generate"
    ]
  }
}